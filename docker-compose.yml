version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network     
  
  stream-processor:
    build: ./kafka-stream-solution/stream-processor
    depends_on:
      - kafka
    networks:
      - kafka-network
    
  redis:
    image: redis:6.2.1
    ports:
      - "6379:6379"
    networks:
      - kafka-network  

  slack-producer:
    image: openjdk:21
    volumes:
      - ./slack-integration/build/libs:/usr/src/myapp
    working_dir: /usr/src/myapp
    command: [ "java", "-cp", "slack-integration-1.0-all.jar", "com.createFuture.SlackIntegrationApp" ]
    env_file:
      - .env
    depends_on:
      - kafka
    networks:
      - kafka-network

  websocket-consumer:
    build: ./websocket-consumer
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - kafka-network
      
  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    networks:
      - kafka-network
    entrypoint: /bin/bash
    command: -c  "ollama serve & sleep 2 && ollama run mistral && tail -f /dev/null"

networks:
  kafka-network:
    driver: bridge
volumes:
  ollama: